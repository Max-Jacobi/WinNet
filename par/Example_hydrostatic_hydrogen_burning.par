###############################################################################
# Example case for hydrostatic hydrogen burning. When executed with the 
# makerun.py, different runs with differet temperatures are produced.
# The runs are later analyzed for different contributions to the 
# energy generation by the pp-chain, CNO cycle, and Ne-Na/Mg-Al cycle.
# Compare the result with:
# https://cococubed.com/code_pages/burn_hydrogen.shtml
#
# * The network includes ~1000 nuclei (up to Zn).
# * The initial composition is read from a file, taken from solar abundances 
#   of Lodders (2003, https://ui.adsabs.harvard.edu/abs/2003ApJ...591.1220L/abstract).
# * Hydrostatic temperature and density evolution.
# * Reaction rates from the JINA Reaclib database
#   Cyburt et al. (2010, https://ui.adsabs.harvard.edu/abs/2010ApJS..189..240C/abstract)
#   accessed via https://reaclib.jinaweb.org/ .
# * Screening corrections from Kravchuk & Yakovlev et al. (2014, https://ui.adsabs.harvard.edu/abs/2014PhRvC..89a5802K/abstract).
# * no theoretical weak rates, no heating, no neutrinos.
#
# A more detailed description and a complete list of the parameters can be found in the documentation. 
# This documentation can be created by running "make doc". After this, it is located in "doc/documentation.html".
#
# Run this file with the help of the makerun.py via:
# python makerun.py -p Example_hydrostatic_hydrogen_burning.par -r Example_hydrostatic_hydrogen_burning --many --val_min=1 --val_max=4 --val_it=0.1
# and check the plotting script in the produced run folder (runs/Plot_me.py)


###########################
#   General input files   #
###########################

# List of all isotopes used in the network
net_source= "@WINNET@/data/Example_data/Example_hydrostatic_hydrogen_burning/sunet_reduced"

# Database with the properties of all isotopes
isotopes_file= "@WINNET@/data/winvne_v2.0.dat"

# The reaclib library
reaclib_file  = "@WINNET@/data/Reaclib_18_9_20"


###########################
#   Initial composition   #
###########################

# Shall the driver read initial composition from a seed file?
read_initial_composition= yes

# Format of the seed file
seed_format = Z A Y

# Seed path
seed_file = "@WINNET@/data/Example_data/Example_hydrostatic_hydrogen_burning/solar_seed.txt"


############################
# Thermodynamic conditions #
############################

# Is this a trajectory run?
trajectory_mode = "analytic"

# Start at t=0s, hydrostatic temperatures (val is replaced by makerun.py)
# and take constant densities.
t_analytic   = 0
T9_analytic  = val*1e-2
rho_analytic = 100


###################################
# Nuclear statistical equilibrium #
###################################

# Initial temperature for NSE descend algorithm
nse_descend_t9start= 100.0

# Temperature at which calculation should start [GK] (initemp)
initemp_hot  = 6
initemp_cold = 6

# Temperature above which nse should be used [GK]
nsetemp_hot  = 5.8
nsetemp_cold = 5.8

# Recalculate NSE composition?
nse_calc_every = 1


########################
# Termination settings #
########################

# termination_criterion: 
# =1: after final_time is reached;
termination_criterion = 1

# Age of the sun (arbitrarily chosen)
final_time = 14.5e16


###########################
#     Output Settings     #
###########################

# Frequency of various types of the output:
# Set the values to 0 to turn output and calculation off.

# Output frequency for OUT file (or screen if not started with output piped to OUT)
out_every        = 1

# Output frequency for mainout.dat
mainout_every    = 10

# Give the energy generation every 50 steps
h_engen_every= 10

# Detailed energy generation output
h_engen_detailed = yes

# Write finab in hdf5
h_finab = yes


###############
# Other flags #
###############

# Screening corrections
screening_mode = 1

# Tabulated chemical potential of electron-positron gas
chem_pot_file= "@WINNET@/data/chem_table.dat"

#######################
# Numerical parameter #
#######################

# Integration method
# 1 - Gear
solver = 1
